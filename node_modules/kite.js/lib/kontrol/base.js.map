{"version":3,"sources":["../../src/kontrol/base.js"],"names":["Kontrol","constructor","options","autoConnect","autoReconnect","authenticate","name","kite","Kite","url","auth","username","environment","version","region","hostname","logLevel","transportClass","transportOptions","prefix","on","error","emit","bind","open","createKite","kiteDescriptor","token","type","key","tokenExpired","renewToken","query","tell","err","console","setToken","createKites","kiteDescriptors","Array","from","map","k","fetchKites","args","callback","result","createKiteNotFoundError","kites","fetchKite","undefined","watchKites","changes","watchHandler","createUpdateHandler","watcherID","register","cancelWatcher","id","response","action","eventName","actions","connect","disconnect","KiteInfo"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,MAAMA,OAAN,8BAA8B;AAC5BC,cAAYC,OAAZ,EAAqB;AACnB;;AAEA,SAAKA,OAAL,GAAeA,WAAW,EAA1B;;AAEA,QAAI,KAAKA,OAAL,CAAaC,WAAb,IAA4B,IAAhC,EAAsC;AACpC,WAAKD,OAAL,CAAaC,WAAb,GAA2B,IAA3B;AACD;AACD,QAAI,KAAKD,OAAL,CAAaE,aAAb,IAA8B,IAAlC,EAAwC;AACtC,WAAKF,OAAL,CAAaE,aAAb,GAA6B,IAA7B;AACD;;AAED,QAAI,KAAKF,OAAL,CAAaC,WAAjB,EAA8B;AAC5B,WAAKE,YAAL;AACD;AACF;;AAEDA,eAAaH,UAAU,KAAKA,OAA5B,EAAqC;AACnC,SAAKA,OAAL,GAAeA,OAAf;;AAEA,QAAII,OAAO,KAAKJ,OAAL,CAAaI,IAAb,GAAoB,KAAKJ,OAAL,CAAaI,IAAjC,GAAwC,SAAnD;;AAEA,SAAKC,IAAL,GAAY,IAAI,KAAKN,WAAL,CAAiBO,IAArB,CAA0B;AACpCC,WAAK,KAAKP,OAAL,CAAaO,GADkB;AAEpCC,YAAM,KAAKR,OAAL,CAAaQ,IAFiB;AAGpCC,gBAAU,KAAKT,OAAL,CAAaS,QAHa;AAIpCC,mBAAa,KAAKV,OAAL,CAAaU,WAJU;AAKpCC,eAAS,KAAKX,OAAL,CAAaW,OALc;AAMpCC,cAAQ,KAAKZ,OAAL,CAAaY,MANe;AAOpCC,gBAAU,KAAKb,OAAL,CAAaa,QAPa;AAQpCT,YAAMA,IAR8B;AASpCU,gBAAU,KAAKd,OAAL,CAAac,QATa;AAUpCC,sBAAgB,KAAKf,OAAL,CAAae,cAVO;AAWpCC,wBAAkB,KAAKhB,OAAL,CAAagB,gBAXK;AAYpCC,cAAQ,KAAKjB,OAAL,CAAaiB;AAZe,KAA1B,CAAZ;;AAeA,SAAKZ,IAAL,CAAUa,EAAV,CAAa,iBAAMC,KAAnB,EAA0B,KAAKC,IAAL,CAAUC,IAAV,CAAe,IAAf,EAAqB,OAArB,CAA1B,EApBmC,CAoBsB;AACzD,SAAKhB,IAAL,CAAUa,EAAV,CAAa,iBAAMI,IAAnB,EAAyB,KAAKF,IAAL,CAAUC,IAAV,CAAe,IAAf,EAAqB,MAArB,CAAzB;AACD;;AAEDE,aAAWvB,OAAX,EAAoB;AAClB,QAAI;AACFK,YAAMmB,cADJ;AAEFC,WAFE;AAGFT,sBAHE;AAIFf,iBAJE;AAKFC,mBALE;AAMFK;AANE,QAOAP,OAPJ;;AASA,QAAIgB,oBAAoB,IAAxB,EAA8B;AAC5BA,yBAAmB,KAAKhB,OAAL,CAAagB,gBAAhC;AACD;AACD,QAAIf,eAAe,IAAnB,EAAyB;AACvBA,oBAAc,KAAd;AACD;AACD,QAAIC,iBAAiB,IAArB,EAA2B;AACzBA,sBAAgB,IAAhB;AACD;;AAED,UAAMG,OAAO,IAAI,KAAKN,WAAL,CAAiBO,IAArB,CAA0B;AACrCQ,gBAAU,KAAKd,OAAL,CAAac,QADc;AAErCL,gBAAUe,eAAef,QAFY;AAGrCC,mBAAac,eAAed,WAHS;AAIrCC,eAASa,eAAeb,OAJa;AAKrCC,cAAQY,eAAeZ,MALc;AAMrCC,gBAAUW,eAAeX,QANY;AAOrCZ,iBAPqC;AAQrCC,mBARqC;AASrCE,YAAMoB,eAAepB,IATgB;AAUrCG,SAVqC;AAWrCC,YAAM;AACJkB,cAAM,OADF;AAEJC,aAAKF;AAFD,OAX+B;AAerCV,sBAAgB,KAAKf,OAAL,CAAae,cAfQ;AAgBrCC;AAhBqC,KAA1B,EAiBVE,EAjBU,CAiBP,iBAAMU,YAjBC,EAiBa,MAAM;AAC9B,aAAO,KAAKC,UAAL,CAAgBxB,IAAhB,EAAsBmB,cAAtB,CAAP;AACD,KAnBY,CAAb;;AAqBA,WAAOnB,IAAP;AACD;;AAEDwB,aAAWxB,IAAX,EAAiByB,KAAjB,EAAwB;AACtB,WAAO,KAAKzB,IAAL,CAAU0B,IAAV,CAAe,UAAf,EAA2B,CAACD,KAAD,CAA3B,EAAoC,CAACE,GAAD,EAAMP,KAAN,KAAgB;AACzD,UAAIO,GAAJ,EAAS;AACP;AACAC,gBAAQd,KAAR,CAAca,GAAd;AACA;AACD;AACD,aAAO3B,KAAK6B,QAAL,CAAcT,KAAd,CAAP;AACD,KAPM,CAAP;AAQD;;AAEDU,cAAYC,eAAZ,EAA6BN,KAA7B,EAAoC;AAClC,WAAOO,MAAMC,IAAN,CAAWF,eAAX,EAA4BG,GAA5B,CAAgCC,KAAK,KAAKjB,UAAL,CAAgBiB,CAAhB,CAArC,CAAP;AACD;;AAEDC,aAAWC,OAAO,EAAlB,EAAsBC,QAAtB,EAAgC;AAC9B,SAAKtC,IAAL,CAAU0B,IAAV,CAAe,UAAf,EAA2B,CAACW,IAAD,CAA3B,EAAmC,CAACV,GAAD,EAAMY,MAAN,KAAiB;AAClD,UAAIZ,OAAO,IAAX,EAAiB;AACfW,iBAASX,GAAT;AACA;AACD;;AAED,UAAIY,UAAU,IAAd,EAAoB;AAClBD,iBAAS,KAAKE,uBAAL,CAA6BH,KAAKZ,KAAlC,CAAT;AACA;AACD;;AAEDa,eAAS,IAAT,EAAe,KAAKR,WAAL,CAAiBS,OAAOE,KAAxB,CAAf;AACD,KAZD;AAaD;;AAEDC,YAAUL,OAAO,EAAjB,EAAqBC,QAArB,EAA+B;AAC7B,SAAKF,UAAL,CAAgBC,IAAhB,EAAsB,CAACV,GAAD,EAAMc,KAAN,KAAgB;AACpC,UAAId,OAAO,IAAX,EAAiB;AACfW,iBAASX,GAAT;AACA;AACD;;AAED,UAAI,CAACc,SAAS,IAAT,GAAgBA,MAAM,CAAN,CAAhB,GAA2BE,SAA5B,KAA0C,IAA9C,EAAoD;AAClDL,iBAAS,KAAKE,uBAAL,CAA6BH,KAAKZ,KAAlC,CAAT;AACA;AACD;;AAEDa,eAAS,IAAT,EAAeG,MAAM,CAAN,CAAf;AACD,KAZD;AAaD;;AAEDG,aAAWP,OAAO,EAAlB,EAAsBC,QAAtB,EAAgC;AAC9B,UAAMO,UAAU,0BAAhB;AACAR,SAAKS,YAAL,GAAoB,KAAKC,mBAAL,CAAyBF,OAAzB,CAApB;AACA,SAAK7C,IAAL,CAAU0B,IAAV,CAAe,UAAf,EAA2B,CAACW,IAAD,CAA3B,EAAmC,CAACV,GAAD,EAAMY,MAAN,KAAiB;AAClD,UAAIZ,OAAO,IAAX,EAAiB;AACfW,iBAASX,GAAT;AACA;AACD;;AAED,YAAM,EAAEc,OAAOV,eAAT,EAA0BiB,SAA1B,KAAwCT,MAA9C;;AAEAD,eAAS,IAAT,EAAe,EAAEO,OAAF,EAAWG,SAAX,EAAf;;AAEA,WAAK,IAAIhD,IAAT,IAAiB,KAAK8B,WAAL,CAAiBC,eAAjB,CAAjB,EAAoD;AAClDc,gBAAQ9B,IAAR,CAAa,iBAAMkC,QAAnB,EAA6BjD,IAA7B;AACD;AACF,KAbD;AAcD;;AAEDkD,gBAAcC,EAAd,EAAkBb,QAAlB,EAA4B;AAC1B,WAAO,KAAKtC,IAAL,CAAU0B,IAAV,CAAe,eAAf,EAAgC,CAACyB,EAAD,CAAhC,EAAsCb,QAAtC,CAAP;AACD;;AAEDS,sBAAoBF,OAApB,EAA6B;AAC3B,WAAOO,YAAY;AACjB,YAAM,EAAEzB,GAAF,EAAOY,MAAP,KAAkBa,QAAxB;;AAEA,UAAIzB,OAAO,IAAX,EAAiB;AACfkB,gBAAQ9B,IAAR,CAAa,iBAAMD,KAAnB,EAA0Ba,GAA1B;AACA;AACD;;AAED,UAAI,EAAE0B,MAAF,EAAUrD,IAAV,EAAgBoB,KAAhB,EAAuBlB,GAAvB,KAA+BqC,MAAnC;;AAEAvC,aAAO,KAAKkB,UAAL,CAAgB,EAAElB,IAAF,EAAQoB,KAAR,EAAelB,GAAf,EAAhB,CAAP;;AAEA,YAAMoD,YAAY,KAAK5D,WAAL,CAAiB6D,OAAjB,CAAyBF,MAAzB,CAAlB;AACAR,cAAQ9B,IAAR,CAAauC,SAAb,EAAwBtD,IAAxB;AACD,KAdD;AAeD;;AAEDwC,0BAAwBf,KAAxB,EAA+B;AAC7B,WAAO,oBAAe,4BAA2B,uBAAQA,KAAR,CAAe,EAAzD,CAAP;AACD;;AAED+B,YAAU;AACR,WAAO,KAAKxD,IAAL,CAAUwD,OAAV,EAAP;AACD;;AAEDC,eAAa;AACX,WAAO,KAAKzD,IAAL,CAAUyD,UAAV,EAAP;AACD;;AAEDR,WAAS/C,GAAT,EAAcoC,QAAd,EAAwB;AACtB,WAAO,KAAKtC,IAAL,IAAa,IAAb,GACH,KAAKA,IAAL,CAAU0B,IAAV,CAAe,UAAf,EAA2B,CAACxB,GAAD,CAA3B,EAAkCoC,QAAlC,CADG,GAEHK,SAFJ;AAGD;AA9L2B;;AAiM9BlD,QAAQa,OAAR,GAAkB,oBAASoD,QAAT,CAAkBpD,OAApC;AACAb,QAAQQ,IAAR;AACAR,QAAQ8D,OAAR;;kBAEe9D,O","file":"base.js","sourcesContent":["import { EventEmitter as Emitter } from 'events'\nimport Kite from '../kite/base'\nimport KiteError from '../kite/error'\nimport getPath from './getpath'\nimport { Event, Defaults, KontrolActions } from '../constants'\n\nclass Kontrol extends Emitter {\n  constructor(options) {\n    super()\n\n    this.options = options || {}\n\n    if (this.options.autoConnect == null) {\n      this.options.autoConnect = true\n    }\n    if (this.options.autoReconnect == null) {\n      this.options.autoReconnect = true\n    }\n\n    if (this.options.autoConnect) {\n      this.authenticate()\n    }\n  }\n\n  authenticate(options = this.options) {\n    this.options = options\n\n    let name = this.options.name ? this.options.name : 'kontrol'\n\n    this.kite = new this.constructor.Kite({\n      url: this.options.url,\n      auth: this.options.auth,\n      username: this.options.username,\n      environment: this.options.environment,\n      version: this.options.version,\n      region: this.options.region,\n      hostname: this.options.hostname,\n      name: name,\n      logLevel: this.options.logLevel,\n      transportClass: this.options.transportClass,\n      transportOptions: this.options.transportOptions,\n      prefix: this.options.prefix,\n    })\n\n    this.kite.on(Event.error, this.emit.bind(this, 'error')) // forward kite error events\n    this.kite.on(Event.open, this.emit.bind(this, 'open'))\n  }\n\n  createKite(options) {\n    let {\n      kite: kiteDescriptor,\n      token,\n      transportOptions,\n      autoConnect,\n      autoReconnect,\n      url,\n    } = options\n\n    if (transportOptions == null) {\n      transportOptions = this.options.transportOptions\n    }\n    if (autoConnect == null) {\n      autoConnect = false\n    }\n    if (autoReconnect == null) {\n      autoReconnect = true\n    }\n\n    const kite = new this.constructor.Kite({\n      logLevel: this.options.logLevel,\n      username: kiteDescriptor.username,\n      environment: kiteDescriptor.environment,\n      version: kiteDescriptor.version,\n      region: kiteDescriptor.region,\n      hostname: kiteDescriptor.hostname,\n      autoConnect,\n      autoReconnect,\n      name: kiteDescriptor.name,\n      url,\n      auth: {\n        type: 'token',\n        key: token,\n      },\n      transportClass: this.options.transportClass,\n      transportOptions,\n    }).on(Event.tokenExpired, () => {\n      return this.renewToken(kite, kiteDescriptor)\n    })\n\n    return kite\n  }\n\n  renewToken(kite, query) {\n    return this.kite.tell('getToken', [query], (err, token) => {\n      if (err) {\n        // FIXME: what should happen to this error?\n        console.error(err)\n        return\n      }\n      return kite.setToken(token)\n    })\n  }\n\n  createKites(kiteDescriptors, query) {\n    return Array.from(kiteDescriptors).map(k => this.createKite(k))\n  }\n\n  fetchKites(args = {}, callback) {\n    this.kite.tell('getKites', [args], (err, result) => {\n      if (err != null) {\n        callback(err)\n        return\n      }\n\n      if (result == null) {\n        callback(this.createKiteNotFoundError(args.query))\n        return\n      }\n\n      callback(null, this.createKites(result.kites))\n    })\n  }\n\n  fetchKite(args = {}, callback) {\n    this.fetchKites(args, (err, kites) => {\n      if (err != null) {\n        callback(err)\n        return\n      }\n\n      if ((kites != null ? kites[0] : undefined) == null) {\n        callback(this.createKiteNotFoundError(args.query))\n        return\n      }\n\n      callback(null, kites[0])\n    })\n  }\n\n  watchKites(args = {}, callback) {\n    const changes = new Emitter()\n    args.watchHandler = this.createUpdateHandler(changes)\n    this.kite.tell('getKites', [args], (err, result) => {\n      if (err != null) {\n        callback(err)\n        return\n      }\n\n      const { kites: kiteDescriptors, watcherID } = result\n\n      callback(null, { changes, watcherID })\n\n      for (let kite of this.createKites(kiteDescriptors)) {\n        changes.emit(Event.register, kite)\n      }\n    })\n  }\n\n  cancelWatcher(id, callback) {\n    return this.kite.tell('cancelWatcher', [id], callback)\n  }\n\n  createUpdateHandler(changes) {\n    return response => {\n      const { err, result } = response\n\n      if (err != null) {\n        changes.emit(Event.error, err)\n        return\n      }\n\n      let { action, kite, token, url } = result\n\n      kite = this.createKite({ kite, token, url })\n\n      const eventName = this.constructor.actions[action]\n      changes.emit(eventName, kite)\n    }\n  }\n\n  createKiteNotFoundError(query) {\n    return new KiteError(`No kite found for query: ${getPath(query)}`)\n  }\n\n  connect() {\n    return this.kite.connect()\n  }\n\n  disconnect() {\n    return this.kite.disconnect()\n  }\n\n  register(url, callback) {\n    return this.kite != null\n      ? this.kite.tell('register', [url], callback)\n      : undefined\n  }\n}\n\nKontrol.version = Defaults.KiteInfo.version\nKontrol.Kite = Kite\nKontrol.actions = KontrolActions\n\nexport default Kontrol\n"]}