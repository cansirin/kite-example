{"version":3,"sources":["../../src/server/index.test.js"],"names":["logLevel","describe","it","done","transport","SockJS","toExist","WebSocket","kite","url","autoReconnect","autoConnect","transportClass","math","name","auth","api","square","x","callback","on","tell","then","res","toBe","finally","disconnect","close","listen","connect","squareApi","methods","cubeApi","cube","setApi","connection","toThrow","server"],"mappings":"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","file":"index.test.js","sourcesContent":["import expect from 'expect'\nimport Kite from '../kite'\nimport KiteServer from './'\nimport KiteApi from '../kiteapi'\nimport SockJS from 'sockjs-client'\nimport WebSocket from 'ws'\n\nconst logLevel = 0\n\ndescribe('KiteServer', () => {\n  it('should expose SockJS and WebSocket as transport class', done => {\n    expect(KiteServer.transport.SockJS).toExist()\n    expect(KiteServer.transport.WebSocket).toExist()\n    done()\n  })\n})\n\ndescribe('KiteServer with SockJS', () => {\n  it('should be able to accept kite connections', done => {\n    const kite = new Kite({\n      url: 'http://0.0.0.0:7780',\n      autoReconnect: false,\n      autoConnect: false,\n      transportClass: Kite.transport.SockJS,\n      logLevel,\n    })\n\n    const math = new KiteServer({\n      name: 'math',\n      auth: false,\n      transportClass: KiteServer.transport.SockJS,\n      logLevel,\n      api: {\n        square: function(x, callback) {\n          callback(null, x * x)\n        },\n      },\n    })\n\n    kite.on('open', () => {\n      kite\n        .tell('square', 5)\n        .then(res => expect(res).toBe(25))\n        .finally(() => {\n          kite.disconnect()\n          math.close()\n          done()\n        })\n    })\n\n    math.listen(7780)\n    kite.connect()\n  })\n\n  it('should allow defining api after init', done => {\n    const kite = new Kite({\n      url: 'http://0.0.0.0:7780',\n      autoReconnect: true,\n      autoConnect: false,\n      transportClass: Kite.transport.SockJS,\n      logLevel,\n    })\n\n    const math = new KiteServer({\n      name: 'math',\n      transportClass: KiteServer.transport.SockJS,\n      logLevel,\n    })\n\n    let squareApi = new KiteApi({\n      auth: false,\n      methods: {\n        square: function(x, callback) {\n          callback(null, x * x)\n        },\n      },\n    })\n\n    let cubeApi = new KiteApi({\n      auth: false,\n      methods: {\n        cube: function(x, callback) {\n          callback(null, x * x * x)\n        },\n      },\n    })\n\n    math.setApi(squareApi)\n\n    kite\n      .tell('square', 5)\n      .then(res => expect(res).toBe(25))\n      .finally(() => {\n        math.setApi(cubeApi)\n\n        kite.disconnect(true)\n        kite.on('open', () => {\n          kite\n            .tell('cube', 5)\n            .then(res => expect(res).toBe(125))\n            .finally(() => {\n              math.close()\n              done()\n            })\n        })\n      })\n\n    math.listen(7780)\n    kite.connect()\n  })\n})\n\ndescribe('KiteServer with WebSocket', () => {\n  it('should be able to accept kite connections', done => {\n    const kite = new Kite({\n      url: 'http://0.0.0.0:7780',\n      autoConnect: false,\n      logLevel,\n    })\n\n    const math = new KiteServer({\n      name: 'math',\n      auth: false,\n      logLevel,\n      api: {\n        square: function(x, callback) {\n          callback(null, x * x)\n        },\n      },\n    })\n\n    kite.on('open', () => {\n      kite\n        .tell('square', 5)\n        .then(res => expect(res).toBe(25))\n        .finally(() => {\n          kite.disconnect()\n          math.close()\n          done()\n        })\n    })\n\n    math.listen(7780)\n    kite.connect()\n  })\n})\n\ndescribe('KiteServer connection', () => {\n  describe('with existing connection', () => {\n    it('should throw if the given connection is closed', done => {\n      const math = new KiteServer({\n        name: 'math',\n        auth: false,\n        logLevel,\n        api: {\n          square: function(x, callback) {\n            callback(null, x * x)\n          },\n        },\n      })\n\n      math.listen(7780)\n\n      const connection = new WebSocket('ws://localhost:7780')\n\n      connection.on('open', () => {\n        connection.on('close', () => {\n          math.close()\n          expect(() => {\n            return new Kite({ connection: connection, logLevel })\n          }).toThrow(/Given connection is closed/)\n          done()\n        })\n        connection.close()\n      })\n    })\n\n    it('should work with a WebSocket connection', done => {\n      const math = new KiteServer({\n        name: 'math',\n        auth: false,\n        logLevel,\n        api: {\n          square: function(x, callback) {\n            callback(null, x * x)\n          },\n        },\n      })\n\n      math.listen(7780)\n\n      const connection = new WebSocket('ws://localhost:7780')\n\n      const kite = new Kite({\n        connection,\n        logLevel,\n      })\n\n      kite.on('open', () => {\n        kite\n          .tell('square', 5)\n          .then(res => expect(res).toBe(25))\n          .finally(() => {\n            kite.disconnect()\n            math.close()\n            done()\n          })\n      })\n    })\n\n    it('should work with a SockJS connection', done => {\n      const math = new KiteServer({\n        name: 'math',\n        auth: false,\n        transportClass: KiteServer.transport.SockJS,\n        logLevel,\n        api: {\n          square: function(x, callback) {\n            callback(null, x * x)\n          },\n        },\n      })\n\n      math.listen(7780)\n\n      const connection = new SockJS('http://0.0.0.0:7780')\n\n      const kite = new Kite({\n        connection,\n        logLevel,\n      })\n\n      kite.on('open', () => {\n        kite\n          .tell('square', 5)\n          .then(res => expect(res).toBe(25))\n          .finally(() => {\n            kite.disconnect()\n            math.close()\n            done()\n          })\n      })\n    })\n  })\n})\n\ndescribe('KiteServer to Remote Kite connection', () => {\n  it('should work with WebSocket transport', done => {\n    const kite = new Kite({\n      url: 'ws://0.0.0.0:7780',\n      autoReconnect: false,\n      autoConnect: false,\n      logLevel,\n      api: {\n        square: function(x, callback) {\n          callback(null, x * x)\n        },\n      },\n    })\n\n    const math = new KiteServer({\n      name: 'math',\n      auth: false,\n      logLevel,\n    })\n\n    math.listen(7780)\n    math.server.on('connection', connection => {\n      connection.kite\n        .tell('square', 5)\n        .then(res => expect(res).toBe(25))\n        .finally(() => {\n          kite.disconnect()\n          math.close()\n          done()\n        })\n    })\n\n    kite.connect()\n  })\n\n  it('should work with SockJS transport', done => {\n    const kite = new Kite({\n      url: 'http://0.0.0.0:7780',\n      transportClass: Kite.transport.SockJS,\n      autoReconnect: false,\n      autoConnect: false,\n      logLevel,\n      api: {\n        square: function(x, callback) {\n          callback(null, x * x)\n        },\n      },\n    })\n\n    const math = new KiteServer({\n      transportClass: KiteServer.transport.SockJS,\n      name: 'math',\n      auth: false,\n      logLevel,\n    })\n\n    math.listen(7780)\n    math.server.on('connection', connection => {\n      connection.kite\n        .tell('square', 5)\n        .then(res => expect(res).toBe(25))\n        .finally(() => {\n          kite.disconnect()\n          math.close()\n          done()\n        })\n    })\n\n    kite.connect()\n  })\n})\n"]}