{"version":3,"sources":["../src/kitelogger.test.js"],"names":["describe","it","logs","error","warn","info","logger","name","level","DEBUG","args","push","critical","warning","notice","debug","toEqual"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAEAA,SAAS,QAAT,EAAmB,MAAM;AACvBC,KAAG,OAAH,EAAY,MAAM;AAChB,UAAMC,OAAO;AACXC,aAAO,EADI;AAEXC,YAAM,EAFK;AAGXC,YAAM;AAHK,KAAb;;AAMA,UAAMC,SAAS,yBAAW;AACxBC,YAAM,QADkB;AAExBC,aAAO,sBAAWC,KAFM;AAGxBN,aAAO,CAAC,GAAGO,IAAJ,KAAaR,KAAKC,KAAL,CAAWQ,IAAX,CAAgBD,IAAhB,CAHI;AAIxBN,YAAM,CAAC,GAAGM,IAAJ,KAAaR,KAAKE,IAAL,CAAUO,IAAV,CAAeD,IAAf,CAJK;AAKxBL,YAAM,CAAC,GAAGK,IAAJ,KAAaR,KAAKG,IAAL,CAAUM,IAAV,CAAeD,IAAf;AALK,KAAX,CAAf;;AAQAJ,WAAOM,QAAP,CAAgB,KAAhB;AACAN,WAAOH,KAAP,CAAa,KAAb;AACAG,WAAOO,OAAP,CAAe,OAAf;AACAP,WAAOQ,MAAP,CAAc,MAAd;AACAR,WAAOD,IAAP,CAAY,MAAZ;AACAC,WAAOS,KAAP,CAAa,KAAb;;AAEA,0BAAOb,KAAKC,KAAL,CAAW,CAAX,CAAP,EAAsBa,OAAtB,CAA8B,CAAC,UAAD,EAAa,UAAb,EAAyB,KAAzB,CAA9B;AACA,0BAAOd,KAAKC,KAAL,CAAW,CAAX,CAAP,EAAsBa,OAAtB,CAA8B,CAAC,UAAD,EAAa,OAAb,EAAsB,KAAtB,CAA9B;AACA,0BAAOd,KAAKE,IAAL,CAAU,CAAV,CAAP,EAAqBY,OAArB,CAA6B,CAAC,UAAD,EAAa,SAAb,EAAwB,OAAxB,CAA7B;AACA,0BAAOd,KAAKG,IAAL,CAAU,CAAV,CAAP,EAAqBW,OAArB,CAA6B,CAAC,UAAD,EAAa,QAAb,EAAuB,MAAvB,CAA7B;AACA,0BAAOd,KAAKG,IAAL,CAAU,CAAV,CAAP,EAAqBW,OAArB,CAA6B,CAAC,UAAD,EAAa,MAAb,EAAqB,MAArB,CAA7B;AACA,0BAAOd,KAAKG,IAAL,CAAU,CAAV,CAAP,EAAqBW,OAArB,CAA6B,CAAC,UAAD,EAAa,OAAb,EAAsB,KAAtB,CAA7B;AACD,GA5BD;AA6BD,CA9BD","file":"kitelogger.test.js","sourcesContent":["import expect from 'expect'\nimport Logger from './kitelogger'\nimport { DebugLevel } from './constants'\n\ndescribe('Logger', () => {\n  it('works', () => {\n    const logs = {\n      error: [],\n      warn: [],\n      info: [],\n    }\n\n    const logger = new Logger({\n      name: 'foobar',\n      level: DebugLevel.DEBUG,\n      error: (...args) => logs.error.push(args),\n      warn: (...args) => logs.warn.push(args),\n      info: (...args) => logs.info.push(args),\n    })\n\n    logger.critical('one')\n    logger.error('two')\n    logger.warning('three')\n    logger.notice('four')\n    logger.info('five')\n    logger.debug('six')\n\n    expect(logs.error[0]).toEqual(['[foobar]', 'CRITICAL', 'one'])\n    expect(logs.error[1]).toEqual(['[foobar]', 'ERROR', 'two'])\n    expect(logs.warn[0]).toEqual(['[foobar]', 'WARNING', 'three'])\n    expect(logs.info[0]).toEqual(['[foobar]', 'NOTICE', 'four'])\n    expect(logs.info[1]).toEqual(['[foobar]', 'INFO', 'five'])\n    expect(logs.info[2]).toEqual(['[foobar]', 'DEBUG', 'six'])\n  })\n})\n"]}