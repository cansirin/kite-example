{"version":3,"sources":["../../src/kite/error.js"],"names":["KiteError","Error","constructor","message","call","name","codeIs","code","err","codeIsnt","makeProperError","type"],"mappings":";;;;;AAAe,MAAMA,SAAN,SAAwBC,KAAxB,CAA8B;AAC3CC,cAAYC,OAAZ,EAAqB;AACnB;;AAEAF,UAAMG,IAAN,CAAW,IAAX;;AAEA,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKE,IAAL,GAAY,WAAZ;AACD;;AAED;AACA,SAAOC,MAAP,CAAcC,IAAd,EAAoB;AAClB,WAAOC,OAAOD,SAASC,IAAID,IAA3B;AACD;;AAED,SAAOE,QAAP,CAAgBF,IAAhB,EAAsB;AACpB,WAAOC,OAAOD,SAASC,IAAID,IAA3B;AACD;;AAED,SAAOG,eAAP,CAAuB,EAAEC,IAAF,EAAQR,OAAR,EAAiBI,IAAjB,EAAvB,EAAgD;AAC9C,UAAMC,MAAM,IAAIR,SAAJ,CAAcG,OAAd,CAAZ;AACAK,QAAIG,IAAJ,GAAWA,IAAX;AACAH,QAAID,IAAJ,GAAWA,IAAX;AACA,WAAOC,GAAP;AACD;AAxB0C;kBAAxBR,S","file":"error.js","sourcesContent":["export default class KiteError extends Error {\n  constructor(message) {\n    super()\n\n    Error.call(this)\n\n    this.message = message\n    this.name = 'KiteError'\n  }\n\n  // the predicates these factories make are useful as bluebird catch guards:\n  static codeIs(code) {\n    return err => code === err.code\n  }\n\n  static codeIsnt(code) {\n    return err => code !== err.code\n  }\n\n  static makeProperError({ type, message, code }) {\n    const err = new KiteError(message)\n    err.type = type\n    err.code = code\n    return err\n  }\n}\n"]}