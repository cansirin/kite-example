{"version":3,"sources":["../../src/kite/wrap.test.js"],"names":["describe","it","wrapped","toBeA","thing","call","duration","noop","heartbeatHandle","toExist","flags","toBe"],"mappings":";;AAAA;;;;AACA;;;;;;AAEAA,SAAS,WAAT,EAAsB,MAAM;AAC1BC,KAAG,oCAAH,EAAyC,MAAM;AAC7C,UAAMC,UAAU,qBAAhB;;AAEA,0BAAOA,QAAQ,iBAAR,CAAP,EAAmCC,KAAnC,CAAyC,UAAzC;AACA,0BAAOD,QAAQ,gBAAR,CAAP,EAAkCC,KAAlC,CAAwC,UAAxC;AACA,0BAAOD,QAAQ,WAAR,CAAP,EAA6BC,KAA7B,CAAmC,UAAnC;AACA,0BAAOD,QAAQ,aAAR,CAAP,EAA+BC,KAA/B,CAAqC,UAArC;AACA,0BAAOD,QAAQ,UAAR,CAAP,EAA4BC,KAA5B,CAAkC,UAAlC;AACA,0BAAOD,QAAQ,YAAR,CAAP,EAA8BC,KAA9B,CAAoC,UAApC;AACA,0BAAOD,QAAQ,aAAR,CAAP,EAA+BC,KAA/B,CAAqC,UAArC;AACA,0BAAOD,QAAQ,cAAR,CAAP,EAAgCC,KAAhC,CAAsC,UAAtC;AACA,0BAAOD,QAAQ,gBAAR,CAAP,EAAkCC,KAAlC,CAAwC,UAAxC;AACD,GAZD;;AAcAH,WAAS,4BAAT,EAAuC,MAAM;AAC3CC,OAAG,+DAAH,EAAoE,MAAM;AACxE,YAAMG,QAAQ,EAAd;AACA,YAAMF,UAAU,eAAKG,IAAL,CAAUD,KAAV,EAAiB,EAAjB,CAAhB;;AAEA,YAAME,WAAW,IAAjB;AACA,YAAMC,OAAO,MAAM,CAAE,CAArB;;AAEAL,cAAQ,gBAAR,EAA0BI,QAA1B,EAAoCC,IAApC,EAA0CA,IAA1C;;AAEA,4BAAOH,MAAMI,eAAb,EAA8BC,OAA9B;AACD,KAVD;AAWD,GAZD;;AAcAR,KAAG,0DAAH,EAA+D,MAAM;AACnE,QAAIG,QAAQ,EAAZ;AACA,QAAIM,QAAQ,EAAZ;AACA,UAAMR,UAAU,eAAKG,IAAL,CAAUD,KAAV,EAAiB;AAC/B,yBAAmB,MAAOM,MAAM,iBAAN,IAA2B,IADtB;AAE/B,wBAAkB,MAAOA,MAAM,gBAAN,IAA0B,IAFpB;AAG/B,mBAAa,MAAOA,MAAM,WAAN,IAAqB,IAHV;AAI/B,qBAAe,MAAOA,MAAM,aAAN,IAAuB,IAJd;AAK/B,kBAAY,MAAOA,MAAM,UAAN,IAAoB,IALR;AAM/B,oBAAc,MAAOA,MAAM,YAAN,IAAsB,IANZ;AAO/B,qBAAe,MAAOA,MAAM,aAAN,IAAuB,IAPd;AAQ/B,sBAAgB,MAAOA,MAAM,cAAN,IAAwB;AARhB,KAAjB,CAAhB;;AAWAR,YAAQ,iBAAR;AACAA,YAAQ,gBAAR;AACAA,YAAQ,WAAR;AACAA,YAAQ,aAAR;AACAA,YAAQ,UAAR;AACAA,YAAQ,YAAR;AACAA,YAAQ,aAAR;AACAA,YAAQ,cAAR;AACAA,YAAQ,gBAAR;;AAEA,0BAAOQ,MAAM,iBAAN,CAAP,EAAiCC,IAAjC,CAAsC,IAAtC;AACA,0BAAOD,MAAM,gBAAN,CAAP,EAAgCC,IAAhC,CAAqC,IAArC;AACA,0BAAOD,MAAM,WAAN,CAAP,EAA2BC,IAA3B,CAAgC,IAAhC;AACA,0BAAOD,MAAM,aAAN,CAAP,EAA6BC,IAA7B,CAAkC,IAAlC;AACA,0BAAOD,MAAM,UAAN,CAAP,EAA0BC,IAA1B,CAA+B,IAA/B;AACA,0BAAOD,MAAM,YAAN,CAAP,EAA4BC,IAA5B,CAAiC,IAAjC;AACA,0BAAOD,MAAM,aAAN,CAAP,EAA6BC,IAA7B,CAAkC,IAAlC;AACA,0BAAOD,MAAM,cAAN,CAAP,EAA8BC,IAA9B,CAAmC,IAAnC;AACA,0BAAOD,MAAM,gBAAN,CAAP,EAAgCC,IAAhC,CAAqC,IAArC;AACD,GAjCD;AAkCD,CA/DD","file":"wrap.test.js","sourcesContent":["import expect from 'expect'\nimport wrap from './wrap'\n\ndescribe('kite/wrap', () => {\n  it('should include default api methods', () => {\n    const wrapped = wrap()\n\n    expect(wrapped['kite.systemInfo']).toBeA('function')\n    expect(wrapped['kite.heartbeat']).toBeA('function')\n    expect(wrapped['kite.ping']).toBeA('function')\n    expect(wrapped['kite.tunnel']).toBeA('function')\n    expect(wrapped['kite.log']).toBeA('function')\n    expect(wrapped['kite.print']).toBeA('function')\n    expect(wrapped['kite.prompt']).toBeA('function')\n    expect(wrapped['kite.getPass']).toBeA('function')\n    expect(wrapped['kite.heartbeat']).toBeA('function')\n  })\n\n  describe('defaults[\"kite.heartbeat\"]', () => {\n    it('should assign heartbeatHandle to the object wrap being called', () => {\n      const thing = {}\n      const wrapped = wrap.call(thing, {})\n\n      const duration = 1000\n      const noop = () => {}\n\n      wrapped['kite.heartbeat'](duration, noop, noop)\n\n      expect(thing.heartbeatHandle).toExist()\n    })\n  })\n\n  it('should use given methods instead of defaults when exists', () => {\n    let thing = {}\n    let flags = {}\n    const wrapped = wrap.call(thing, {\n      'kite.systemInfo': () => (flags['kite.systemInfo'] = true),\n      'kite.heartbeat': () => (flags['kite.heartbeat'] = true),\n      'kite.ping': () => (flags['kite.ping'] = true),\n      'kite.tunnel': () => (flags['kite.tunnel'] = true),\n      'kite.log': () => (flags['kite.log'] = true),\n      'kite.print': () => (flags['kite.print'] = true),\n      'kite.prompt': () => (flags['kite.prompt'] = true),\n      'kite.getPass': () => (flags['kite.getPass'] = true),\n    })\n\n    wrapped['kite.systemInfo']()\n    wrapped['kite.heartbeat']()\n    wrapped['kite.ping']()\n    wrapped['kite.tunnel']()\n    wrapped['kite.log']()\n    wrapped['kite.print']()\n    wrapped['kite.prompt']()\n    wrapped['kite.getPass']()\n    wrapped['kite.heartbeat']()\n\n    expect(flags['kite.systemInfo']).toBe(true)\n    expect(flags['kite.heartbeat']).toBe(true)\n    expect(flags['kite.ping']).toBe(true)\n    expect(flags['kite.tunnel']).toBe(true)\n    expect(flags['kite.log']).toBe(true)\n    expect(flags['kite.print']).toBe(true)\n    expect(flags['kite.prompt']).toBe(true)\n    expect(flags['kite.getPass']).toBe(true)\n    expect(flags['kite.heartbeat']).toBe(true)\n  })\n})\n"]}