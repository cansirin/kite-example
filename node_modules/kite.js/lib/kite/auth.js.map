{"version":3,"sources":["../../src/kite/auth.js"],"names":["method","kite","auth","kiteKey","includes","api","shouldAuthenticate","Error","type","key","token"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;kBAEe,mBAAQA,MAAR,CAAe,CAACC,IAAD,EAAOD,MAAP,EAAeE,IAAf,EAAqBC,OAArB,KAAiC;AAC7D,MAAID,QAAQ,IAAZ,EAAkB;AAChB,QAAI,qBAAUE,QAAV,CAAmBJ,MAAnB,CAAJ,EAAgC;AAC9B;AACD;;AAED,QAAI,CAACC,KAAKI,GAAL,CAASC,kBAAT,CAA4BN,MAA5B,CAAL,EAA0C;AACxC;AACD;;AAED,UAAM,IAAIO,KAAJ,CAAU,gBAAV,CAAN;AACD;;AAED,QAAM,EAAEC,IAAF,EAAQC,GAAR,KAAgBP,IAAtB;;AAEA,UAAQM,IAAR;AACE,SAAK,oBAASE,KAAd;AACE,aAAO,qBAAYD,GAAZ,EAAiBN,OAAjB,CAAP;AACF;AACE,YAAM,IAAII,KAAJ,CAAW,sBAAqBC,IAAK,EAArC,CAAN;AAJJ;AAMD,CArBc,C","file":"auth.js","sourcesContent":["import Promise from 'bluebird'\nimport handleToken from './token'\nimport { AuthType, WhiteList } from '../constants'\n\nexport default Promise.method((kite, method, auth, kiteKey) => {\n  if (auth == null) {\n    if (WhiteList.includes(method)) {\n      return\n    }\n\n    if (!kite.api.shouldAuthenticate(method)) {\n      return\n    }\n\n    throw new Error('Access denied!')\n  }\n\n  const { type, key } = auth\n\n  switch (type) {\n    case AuthType.token:\n      return handleToken(key, kiteKey)\n    default:\n      throw new Error(`Unknown auth type: ${type}`)\n  }\n})\n"]}