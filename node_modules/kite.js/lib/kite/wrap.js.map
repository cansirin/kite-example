{"version":3,"sources":["../../src/kite/wrap.js"],"names":["userlandApi","api","duration","ping","callback","heartbeatHandle","Error","message","emit","console","log","global","prompt","err","readline","require","rl","createInterface","input","process","stdin","output","stdout","question","answer","close","memTotal","totalmem","platform","version","navigator","userAgent","info","diskTotal","diskUsage","state","uname","homeDir","homedir","memoryUsage","freemem","totalMemoryLimit","method","Object","keys","fn"],"mappings":";;;;;;kBAGe,UAASA,cAAc,EAAvB,EAA2B;AACxC,QAAMC,MAAM,EAAZ;;AAEAA,MAAI,gBAAJ,IAAwB,CAACC,QAAD,EAAWC,IAAX,EAAiBC,QAAjB,KAA8B;AACpD,SAAKC,eAAL,GAAuB,uBAAaF,IAAb,EAAmBD,WAAW,IAA9B,CAAvB;AACA,WAAOE,SAAS,IAAT,CAAP;AACD,GAHD;;AAKAH,MAAI,WAAJ,IAAmBG,YAAY;AAC7B,WAAOA,SAAS,IAAT,EAAe,MAAf,CAAP;AACD,GAFD;;AAIAH,MAAI,aAAJ,IAAqBG,YAAY;AAC/B,WAAOA,SAAS,IAAIE,KAAJ,CAAU,EAAEC,SAAS,eAAX,EAAV,CAAT,CAAP;AACD,GAFD;;AAIAN,MAAI,WAAJ,IAAmB,CAACM,OAAD,EAAUH,QAAV,KAAuB;AACxC,WAAOA,SAAS,IAAT,EAAeG,OAAf,CAAP;AACD,GAFD;;AAIAN,MAAI,UAAJ,IAAkB,CAACM,OAAD,EAAUH,QAAV,KAAuB;AACvC,SAAKI,IAAL,CAAU,MAAV,EAAkBD,OAAlB;AACA,WAAOH,SAAS,IAAT,CAAP;AACD,GAHD;;AAKAH,MAAI,YAAJ,IAAoB,CAACM,OAAD,EAAUH,QAAV,KAAuB;AACzCK,YAAQC,GAAR,CAAYH,OAAZ;AACA,WAAOH,SAAS,IAAT,CAAP;AACD,GAHD;;AAKAH,MAAI,aAAJ,IAAqB,CAACM,OAAD,EAAUH,QAAV,KAAuB;AAC1C,QAAI;AACFA,eAAS,IAAT,EAAeO,OAAOC,MAAP,CAAcL,OAAd,CAAf;AACD,KAFD,CAEE,OAAOM,GAAP,EAAY;AACZ,YAAMC,WAAWC,QAAQ,UAAR,CAAjB;AACA,YAAMC,KAAKF,SAASG,eAAT,CAAyB;AAClCC,eAAOC,QAAQC,KADmB;AAElCC,gBAAQF,QAAQG;AAFkB,OAAzB,CAAX;;AAKAN,SAAGO,QAAH,CAAYhB,OAAZ,EAAqBiB,UAAU;AAC7BpB,iBAAS,IAAT,EAAeoB,MAAf;AACAR,WAAGS,KAAH;AACD,OAHD;AAID;AACF,GAfD;;AAiBAxB,MAAI,cAAJ,IAAsBA,IAAI,aAAJ,CAAtB;;AAEAA,MAAI,iBAAJ,IAAyBG,YAAY;AACnC,UAAMsB,WAAW,aAAGC,QAAH,EAAjB;AACA,UAAMC,WAAWT,QAAQU,OAAR,GACZ,WAAUV,QAAQU,OAAQ,EADd,GAEbC,YAAYA,UAAUC,SAAtB,GAAkC,aAFtC;;AAIA,UAAMC,OAAO;AACXC,iBAAW,CADA;AAEXC,iBAAW,CAFA;AAGXC,aAAO,SAHI;AAIXC,aAAO,aAAGR,QAAH,EAJI;AAKXS,eAAS,aAAGC,OAAH,EALE;AAMXC,mBAAab,WAAW,aAAGc,OAAH,EANb;AAOXC,wBAAkBf,QAPP;AAQXE;AARW,KAAb;AAUA,WAAOxB,SAAS,IAAT,EAAe4B,IAAf,CAAP;AACD,GAjBD;;AAmBA,OAAK,IAAIU,MAAT,IAAmBC,OAAOC,IAAP,CAAY5C,eAAe,EAA3B,CAAnB,EAAmD;AACjD,UAAM6C,KAAK7C,YAAY0C,MAAZ,CAAX;AACAzC,QAAIyC,MAAJ,IAAcG,EAAd;AACD;AACD,SAAO5C,GAAP;AACD,C;;AA5ED;;;;AACA","file":"wrap.js","sourcesContent":["import Interval from './interval'\nimport os from 'os'\n\nexport default function(userlandApi = {}) {\n  const api = {}\n\n  api['kite.heartbeat'] = (duration, ping, callback) => {\n    this.heartbeatHandle = new Interval(ping, duration * 1000)\n    return callback(null)\n  }\n\n  api['kite.ping'] = callback => {\n    return callback(null, 'pong')\n  }\n\n  api['kite.tunnel'] = callback => {\n    return callback(new Error({ message: 'not supported' }))\n  }\n\n  api['kite.echo'] = (message, callback) => {\n    return callback(null, message)\n  }\n\n  api['kite.log'] = (message, callback) => {\n    this.emit('info', message)\n    return callback(null)\n  }\n\n  api['kite.print'] = (message, callback) => {\n    console.log(message)\n    return callback(null)\n  }\n\n  api['kite.prompt'] = (message, callback) => {\n    try {\n      callback(null, global.prompt(message))\n    } catch (err) {\n      const readline = require('readline')\n      const rl = readline.createInterface({\n        input: process.stdin,\n        output: process.stdout,\n      })\n\n      rl.question(message, answer => {\n        callback(null, answer)\n        rl.close()\n      })\n    }\n  }\n\n  api['kite.getPass'] = api['kite.prompt']\n\n  api['kite.systemInfo'] = callback => {\n    const memTotal = os.totalmem()\n    const platform = process.version\n      ? `Node.js ${process.version}`\n      : navigator ? navigator.userAgent : 'JS Platform'\n\n    const info = {\n      diskTotal: 0,\n      diskUsage: 0,\n      state: 'RUNNING',\n      uname: os.platform(),\n      homeDir: os.homedir(),\n      memoryUsage: memTotal - os.freemem(),\n      totalMemoryLimit: memTotal,\n      platform,\n    }\n    return callback(null, info)\n  }\n\n  for (let method of Object.keys(userlandApi || {})) {\n    const fn = userlandApi[method]\n    api[method] = fn\n  }\n  return api\n}\n"]}